h1. Интерфейс запросов Active Record

Это руководство раскрывает различные способы получения данных из базы данных, используя Active Record. Изучив его, вы сможете:

* Искать записи, используя различные методы и условия
* Определять порядок, получаемые атрибуты, группировку и другие свойства поиска записей
* Использовать нетерпеливую загрузку (eager loading) для уменьшения числа запросов к базе данных, необходимых для получения данных
* Использовать методы динамического поиска
* Проверять существование отдельных записей
* Выполнять различные вычисления в моделях Active Record
* Запускать EXPLAIN на relations

Если вы использовали чистый SQL для поиска записей в базе данных, то скорее всего обнаружите, что в Rails есть лучшие способы выполнения тех же операций. Active Record ограждает вас от необходимости использования SQL во многих случаях.

Примеры кода далее в этом руководстве будут относиться к некоторым из этих моделей:

TIP: Все модели используют +id+ как первичный ключ, если не указано иное.

<ruby>
class Client < ActiveRecord::Base
  has_one :address
  has_many :orders
  has_and_belongs_to_many :roles
end
</ruby>

<ruby>
class Address < ActiveRecord::Base
  belongs_to :client
end
</ruby>

<ruby>
class Order < ActiveRecord::Base
  belongs_to :client, :counter_cache => true
end
</ruby>

<ruby>
class Role < ActiveRecord::Base
  has_and_belongs_to_many :clients
end
</ruby>

Active Record выполнит запросы в базу данных за вас, он совместим с большинством СУБД (MySQL, PostgreSQL и SQLite - это только некоторые из них). Независимо от того, какая используется СУБД, формат методов Active Record будет всегда одинаковый.
