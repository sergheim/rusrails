h1. Аутентификации HTTP

Rails поставляется с двумя встроенными механизмами аутентификации HTTP:

* Простая аутентификация
* Digest аутентификация

h4. Простая аутентификация HTTP

Простая аутентификация HTTP - это аутентификационная схема, поддерживаемая большинством браузеров и других клиентов HTTP. Как пример, рассмотрим административный раздел, который доступен только при вводе имени пользователя и пароля в основном диалоговом окне браузера. Использование встроенной аутентификации достаточно простое, и требует использования одного метода +http_basic_authenticate_with+.

<ruby>
class AdminController < ApplicationController
  http_basic_authenticate_with name: "humbaba", password: "5baa61e4"
end
</ruby>

Разместив это, можете создавать именнованные контроллеры, наследуемые от +AdminController+. Таким образом, предварительный фильтр будет запущен для всех экшнов в этих контроллерах, защищая их с помощью основной аутентификации +HTTP+.

h4. Digest аутентификация HTTP

Digest аутентификация HTTP превосходит простую аутентификацию, так как она не требует от клиента посылать незашифрованный пароль по сети (хотя простая аутентификация HTTP безопасна через HTTPS). Использовать digest аутентификацию с Rails просто, и это потребует только один метод +authenticate_or_request_with_http_digest+.

<ruby>
class AdminController < ApplicationController
  USERS = { "lifo" => "world" }

  before_filter :authenticate

  private

  def authenticate
    authenticate_or_request_with_http_digest do |username|
      USERS[username]
    end
  end
end
</ruby>

Как мы видим из примера, блок +authenticate_or_request_with_http_digest+ принимает только один аргумент - имя пользователя. И блок возвращает пароль. Возврат +false+ или +nil+ из +authenticate_or_request_with_http_digest+ вызовет провал аутентификации.
