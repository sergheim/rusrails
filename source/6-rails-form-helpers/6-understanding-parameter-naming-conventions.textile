h1. Понимание соглашений по именованию параметров

Как вы видели в предыдущих разделах, значения из форм могут быть на верхнем уровне хэша +params+ или вложены в другой хэш. Например, в стандартном экшне +create+ для модели Person, +params[:person]+ будет обычно хэшем всех атрибутов для создания персоны. Хэш +params+ может также содержать массивы, массивы хэшей и тому подобное.

Фундаментально формы HTML не знают о структурировании данных, все, что они создают -- это пары имя-значение, где пары являются обычными строками. Массивы и хэши, которые вы видите в своем приложении, - это результат некоторых соглашений по именованию параметров, которые использует Rails.

TIP: Вы можете быстрее пробовать примеры этого раздела, используя консоль для прямого вызова парсера параметров из Rack. Например:

<ruby>
Rack::Utils.parse_query "name=fred&phone=0123456789"
# => {"name"=>"fred", "phone"=>"0123456789"}
</ruby>

h4. Базовые структуры

Две базовые структуры -- это массивы и хэши. Хэши отражают синтаксис, используемый для доступа к значению в <tt>params</tt>. Например, если форма содержит

<html>
<input id="person_name" name="person[name]" type="text" value="Henry"/>
</html>

хэш +params+ будет содержать

<erb>
{'person' => {'name' => 'Henry'}}
</erb>

и +params[:person][:name]+ получит отправленное значение в контроллере.

Хэши могут быть вложены на столько уровней, сколько требуется, например

<html>
<input id="person_address_city" name="person[address][city]" type="text" value="New York"/>
</html>

вернет такой хэш +params+

<ruby>
{'person' => {'address' => {'city' => 'New York'}}}
</ruby>

Обычно Rails игнорирует дублирующиеся имена параметра. Если имя параметра содержит пустой набор квадратных скобок [], то они будут накоплены в массиве. Если хотите, чтобы люди могли оставлять несколько телефонных номеров, можете поместить это в форму:

<html>
<input name="person[phone_number][]" type="text"/>
<input name="person[phone_number][]" type="text"/>
<input name="person[phone_number][]" type="text"/>
</html>

Что приведет к тому, что +params[:person][:phone_number]+ будет массивом.

h4. Комбинируем их

Можно смешивать и сочетать эти две концепции. Например, один из элементов хэша может быть массивом, как в предыдущем примере, или вы можете иметь массив хэшей. Например, форма может позволить вам создать любое количество адресов, повторяя следующий фрагмент кода

<html>
<input name="addresses[][line1]" type="text"/>
<input name="addresses[][line2]" type="text"/>
<input name="addresses[][city]" type="text"/>
</html>

Что приведет к тому, что +params[:addresses]+ будет массивом хэшей с ключами +line1+, +line2+ и +city+. Rails начинает собирать значения в новый хэш, когда он встречает имя элемента, уже существующее в текущем хэше.

Однако, имеется ограничение, по которому хэши не могут быть вложены произвольно, является допустимым только один уровень "массивности". Массивы обычно могут быть заменены хэшами, например, вместо массива объектов моделей можно иметь хэш объектов модели с ключами, равными их id, индексу массива или любому другому параметру.

WARNING: Параметры в массиве не очень хорошо работают с хелпером +check_box+. В соответствии со спецификацией HTML, ненажатые чекбоксы не возвращают значения. Хелпер +check_box+ обходит это, создавая второе скрытое поле с тем же именем. Если чекбокс не нажат, подтверждается только скрытое поле, а если он нажат, то они оба подтверждаются, но значение от чекбокса получает приоритет. При работе с параметрами массива эти дублирующиеся подтверждения запутают Rails дублирующимися именами полей, и непонятно, как он решит, где начать новый элемент массива. Предпочтительнее использовать или +check_box_tag+, или хэши вместо массивов.

h4. Использование хелперов форм

Предыдущие разделы совсем не использовали хелперы Rails. Хотя можно создавать имена полей самому и передавать их напрямую хелперам, таким как +text_field_tag+, Rails также предоставляет поддержку на более высоком уровне. В вашем распоряжении имеется два инструмента: параметр имени для +form_for+ и +fields_for+, и опция +:index+, принимаемая этими хелперами.

Вы возможно захотите рендерить форму с набором полей ввода для каждого адреса человека. Например:

<erb>
<%= form_for @person do |person_form| %>
  <%= person_form.text_field :name %>
  <% @person.addresses.each do |address| %>
    <%= person_form.fields_for address, :index => address do |address_form|%>
      <%= address_form.text_field :city %>
    <% end %>
  <% end %>
<% end %>
</erb>

Предположим, у кого-то есть два адреса с id 23 и 45, это создаст что-то подобное:

<html>
<form accept-charset="UTF-8" action="/people/1" class="edit_person" id="edit_person_1" method="post">
  <input id="person_name" name="person[name]" type="text" />
  <input id="person_address_23_city" name="person[address][23][city]" type="text" />
  <input id="person_address_45_city" name="person[address][45][city]" type="text" />
</form>
</html>

Это приведет к тому, что хэш +params+ будет выглядеть так

<ruby>
{'person' => {'name' => 'Bob', 'address' => {'23' => {'city' => 'Paris'}, '45' => {'city' => 'London'}}}}
</ruby>

Rails знает, что все эти поля должны быть частью хэша person, так как вы вызвали +fields_for+ для первого form builder. Определяя опцию +:index+, Вы сообщаете Rails, что вместо именования полей +person[address][city]+, он должен вставить индекс, заключенный в [], между address и city. Если передать объект Active Record, как мы сделали, то Rails вызовет +to_param+ для него, который по умолчанию возвращает id в базе данных. Это часто полезно, так как просто обнаружить, какая запись Address должна быть изменена. Можете передать числа с некоторыми другими значениями, строки или даже +nil+ (который приведет к созданию параметра в массиве).

Чтобы создать более замысловатые вложения, можете явно определить первую часть имени поля (+person[address]+ в предыдущем примере), например

<erb>
<%= fields_for 'person[address][primary]', address, :index => address do |address_form| %>
  <%= address_form.text_field :city %>
<% end %>
</erb>

создаст такие поля

<html>
<input id="person_address_primary_1_city" name="person[address][primary][1][city]" type="text" value="bologna" />
</html>

По общему правилу конечное имя поля -- это сцепление имени, переданного в +fields_for+/+form_for+, значение индекса и имени атрибута. Можете также передать опцию +:index+ прямо в хелперы, такие как +text_field+, но, как правило, будет меньше повторов, если определить это на уровне form builder, чем для отдельного элемента ввода.

Как ярлык вы можете добавить [] к имени и опустить опцию +:index+. Это то же самое, что определение +:index => address+, таким образом

<erb>
<%= fields_for 'person[address][primary][]', address do |address_form| %>
  <%= address_form.text_field :city %>
<% end %>
</erb>

создаст абсолютно тот же результат, что и предыдущий пример.
