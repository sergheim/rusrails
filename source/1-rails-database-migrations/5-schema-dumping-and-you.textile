h1. Экспорт схемы

h4. Для чего нужны файлы схемы?

Миграции, какими бы не были они мощными, не являются авторитетным источником для вашей схемы базы данных. Это роль достается или файлу +db/schema.rb+, или файлу SQL, которые генерирует Active Record при исследовании базы данных. Они разработаны не для редактирования, они всего лишь отражают текущее состояние базы данных.

Не нужно (это может привести к ошибке) развертывать новый экземпляр приложения, применяя всю историю миграций. Намного проще и быстрее загрузить в базу данных описание текущей схемы.

Например, как создается тестовая база данных: текущая рабочая база данных выгружается (или в +db/schema.rb+, или в +db/structure.sql+), а затем загружается в тестовую базу данных.

Файлы схемы также полезны, если хотите быстро взглянуть, какие атрибуты есть у объекта Active Record. Эта информация не содержится в коде модели и часто размазана по нескольким миграциям, но собрана воедино в файле схемы. Имеется гем "annotate_models":https://github.com/ctran/annotate_models автоматически добавляет и обновляет комментарии в начале каждой из моделей, составляющих схему, если хотите такую функциональность.

h4. Типы выгрузок схемы

Есть два способа выгрузить схему. Они устанавливаются в +config/environment.rb+ в свойстве +config.active_record.schema_format+, которое может быть или +:sql+, или +:ruby+.

Если выбрано +:ruby+, тогда схема храниться в +db/schema.rb+. Посмотрев в этот файл, можно увидеть, что он очень похож на одну большую миграцию:

<ruby>
ActiveRecord::Schema.define(version: 20080906171750) do
  create_table "authors", force: true do |t|
    t.string   "name"
    t.datetime "created_at"
    t.datetime "updated_at"
  end

  create_table "products", force: true do |t|
    t.string   "name"
    t.text "description"
    t.datetime "created_at"
    t.datetime "updated_at"
    t.string "part_number"
  end
end
</ruby>

Во многих случаях этого достаточно. Этот файл создается с помощью проверки базы данных и описывает свою структуру, используя +create_table+, +add_index+ и так далее. Так как он не зависит от типа базы данных, он может быть загружен в любую базу данных, поддерживаемую Active Record. Это очень полезно, если Вы распространяете приложение, которое может быть запущено на разных базах данных.

Однако, тут есть компромисс: +db/schema.rb+ не может описать специфичные элементы базы данных, такие как внешний ключ (как ограничитель ссылочной целостности), триггеры или хранимые процедуры. В то время как в миграции вы можете выполнить произвольное выражение SQL, выгрузчик схемы не может воспроизвести эти выражения из базы данных. Если Вы используете подобные функции, нужно установить формат схемы :sql.

Вместо использования выгрузчика схемы Active Records, структура базы данных будет выгружена с помощью инструмента, предназначенного для этой базы данных (с помощью задачи +db:structure:dump+ Rake) в +db/structure.sql+. Например, СУБД PostgreSQL использует утилиту +pg_dump+. Для MySQL этот файл будет содержать результат +SHOW CREATE TABLE+ для разных таблиц. Загрузка таких схем это просто запуск содержащихся в них выражений SQL. По определению создастся точная копия структуры базы данных. Использование формата +:sql+ схемы, однако, предотвращает загрузку схемы в СУБД иную, чем использовалась при ее создании.

h4. Выгрузки схем и контроль исходного кода

Поскольку выгрузки схем это авторитетный источник для вашей схемы базы данных, очень рекомендовано включать их в контроль исходного кода.
